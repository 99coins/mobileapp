{
  "_args": [
    [
      {
        "raw": "sane@^2.0.0",
        "scope": null,
        "escapedName": "sane",
        "name": "sane",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/Users/matanguttman/RN/NNBitcoins/node_modules/jest-haste-map"
    ]
  ],
  "_from": "sane@>=2.0.0 <3.0.0",
  "_id": "sane@2.5.2",
  "_inCache": true,
  "_location": "/sane",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/sane_2.5.2_1525727089943_0.5379300082310046"
  },
  "_npmUser": {
    "name": "stefanpenner",
    "email": "stefan.penner@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {
    "arr-flatten": "1.1.0",
    "assign-symbols": "1.0.0",
    "define-property": "2.0.2",
    "fragment-cache": "0.2.1",
    "is-buffer": "1.1.6",
    "is-extendable": "0.1.1",
    "is-plain-object": "2.0.4",
    "ms": "2.0.0",
    "nanomatch": "1.2.9",
    "object.pick": "1.3.0",
    "posix-character-classes": "0.1.1",
    "regex-not": "1.0.2",
    "repeat-element": "1.1.2",
    "repeat-string": "1.6.1",
    "snapdragon": "0.8.2",
    "snapdragon-node": "2.1.1",
    "split-string": "3.1.0",
    "to-regex": "3.0.2",
    "to-regex-range": "2.1.1"
  },
  "_requested": {
    "raw": "sane@^2.0.0",
    "scope": null,
    "escapedName": "sane",
    "name": "sane",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/jest-haste-map"
  ],
  "_resolved": "https://registry.npmjs.org/sane/-/sane-2.5.2.tgz",
  "_shasum": "b4dc1861c21b427e929507a3e751e2a2cb8ab3fa",
  "_shrinkwrap": null,
  "_spec": "sane@^2.0.0",
  "_where": "/Users/matanguttman/RN/NNBitcoins/node_modules/jest-haste-map",
  "author": {
    "name": "amasad"
  },
  "bin": {
    "sane": "./src/cli.js"
  },
  "bugs": {
    "url": "https://github.com/amasad/sane/issues"
  },
  "dependencies": {
    "anymatch": "^2.0.0",
    "capture-exit": "^1.2.0",
    "exec-sh": "^0.2.0",
    "fb-watchman": "^2.0.0",
    "fsevents": "^1.2.3",
    "micromatch": "^3.1.4",
    "minimist": "^1.1.1",
    "walker": "~1.0.5",
    "watch": "~0.18.0"
  },
  "description": "Sane aims to be fast, small, and reliable file system watcher.",
  "devDependencies": {
    "eslint": "^3.19.0",
    "mocha": "~1.17.1",
    "prettier": "^1.3.1",
    "rimraf": "~2.2.6",
    "tmp": "0.0.27"
  },
  "directories": {},
  "dist": {
    "shasum": "b4dc1861c21b427e929507a3e751e2a2cb8ab3fa",
    "tarball": "https://registry.npmjs.org/sane/-/sane-2.5.2.tgz",
    "fileCount": 11,
    "unpackedSize": 48449,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa8L9yCRA9TVsSAnZWagAAvYoQAJTtoCE7dncNwGXxx91P\nApjoZiE97QHBn6Qo/ZYIO0R47DZoN6BrZANpkGWRpJokQGH85c2vr7Lm/Vkr\nmd2LCjlYEKZd51yIQau9qD1PzWrRH/C2DpZx+yC+wj3a8U0IdfjATbM60LE8\nk8nW0aN7ay5QFKxql9dN/fzQGXc4RB+MsrdanlyOv/jiSc3gcXxN+Pi2kV7+\n5jVwxt2rLkQ/aA9WJ5gM9ZhuqX4Y5euLev7g6jmIGsK8N5qu/kXRCEwwjVzi\nai+hJPu62SVp6Ir34Pf0w1/hSla/UhfRsczpIk8qhdlQfoNfikf6kDf1lZDI\n6kjf/CzejtfC0TZslTyW5dRKK8LbZ27ovZ81Vc1eCCafSJQg9dDEjtneou/b\nXHNPLUuw49nsV0QVvAxB7IIOaTceem9wHho6wLLRoLbR7R15ssI54LLeym9W\nzhyyx//PotgXWfBvewfsQ6W8q07hPvmDtSjnhTk13J30F7ic0CNe23I3QFpm\nFBuESrzt2eHgk20UKyoGrA55Nz3kMtvSRds0ElI6KrWHdOHxo1/6+Qn3pQ+n\nkc64nu860H6Q3rBoJ+bSInSvs0DBNykcYaSY6JdgyU1t5tnoY5xjOckbeSQj\nXRVLAF22m71PGvzf1PVyaSVNcNVyQmD4QbGarGqm/Jd+IBv7zX5k1qYHaWUB\n4ItD\r\n=Su32\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=0.6.0"
  },
  "files": [
    "src",
    "index.js"
  ],
  "gitHead": "e3beaf87eba3336332a5fbb1fdf5e952117c8455",
  "homepage": "https://github.com/amasad/sane",
  "keywords": [
    "watch",
    "file",
    "fswatcher",
    "watchfile",
    "fs",
    "watching"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "amasad",
      "email": "amjad.masad@gmail.com"
    },
    {
      "name": "stefanpenner",
      "email": "stefan.penner@gmail.com"
    }
  ],
  "name": "sane",
  "optionalDependencies": {
    "fsevents": "^1.2.3"
  },
  "readme": "[![CircleCI](https://circleci.com/gh/amasad/sane.svg?style=svg)](https://circleci.com/gh/amasad/sane)\n\nsane\n----\n\nI've been driven to insanity by node filesystem watcher wrappers.\nSane aims to be fast, small, and reliable file system watcher. It does that by:\n\n* By default stays away from fs polling because it's very slow and cpu intensive\n* Uses `fs.watch` by default and sensibly works around the various issues\n* Maintains a consistent API across different platforms\n* Where `fs.watch` is not reliable you have the choice of using the following alternatives:\n  * [the facebook watchman library](https://facebook.github.io/watchman/)\n  * polling\n\n## Install\n\n```\n$ npm install sane\n```\n\n## How to choose a mode\n\nDon't worry too much about choosing the correct mode upfront because sane\nmaintains the same API across all modes and will be easy to switch.\n\n* If you're only supporting Linux and OS X, `watchman` would be the most reliable mode\n* If you're using node > v0.10.0 use the default mode\n* If you're running OS X and you're watching a lot of directories and you're running into https://github.com/joyent/node/issues/5463, use `watchman`\n* If you're in an environment where native file system events aren't available (like Vagrant), you should use polling\n* Otherwise, the default mode should work well for you\n\n## API\n\n### sane(dir, options)\n\nWatches a directory and all its descendant directories for changes, deletions, and additions on files and directories.\n\n```js\nvar watcher = sane('path/to/dir', {glob: ['**/*.js', '**/*.css']});\nwatcher.on('ready', function () { console.log('ready') });\nwatcher.on('change', function (filepath, root, stat) { console.log('file changed', filepath); });\nwatcher.on('add', function (filepath, root, stat) { console.log('file added', filepath); });\nwatcher.on('delete', function (filepath, root) { console.log('file deleted', filepath); });\n// close\nwatcher.close();\n```\n\noptions:\n\n* `glob`: a single string glob pattern or an array of them.\n* `poll`: puts the watcher in polling mode. Under the hood that means `fs.watchFile`.\n* `watchman`: makes the watcher use [watchman](https://facebook.github.io/watchman/).\n* `watchmanPath`: sets a custom path for `watchman` binary.\n* `dot`: enables watching files/directories that start with a dot.\n* `ignored`: a glob, regex, function, or array of any combination.\n\nFor the glob pattern documentation, see [micromatch](https://github.com/micromatch/micromatch).\nIf you choose to use `watchman` you'll have to [install watchman yourself](https://facebook.github.io/watchman/docs/install.html)).\nFor the ignored options, see [anymatch](https://github.com/es128/anymatch).\n\n### sane.NodeWatcher(dir, options)\n\nThe default watcher class. Uses `fs.watch` under the hood, and takes the same options as `sane(dir, options)`.\n\n### sane.WatchmanWatcher(dir, options)\n\nThe watchman watcher class. Takes the same options as `sane(dir, options)`.\n\n### sane.PollWatcher(dir, options)\n\nThe polling watcher class. Takes the same options as `sane(dir, options)` with the addition of:\n\n* interval: indicates how often the files should be polled. (passed to fs.watchFile)\n\n### sane.{Node|Watchman|Poll}Watcher#close\n\nStops watching.\n\n### sane.{Node|Watchman|Poll}Watcher events\n\nEmits the following events:\n\nAll events are passed the file/dir path relative to the root directory\n* `ready` when the program is ready to detect events in the directory\n* `change` when a file changes\n* `add` when a file or directory has been added\n* `delete` when a file or directory has been deleted\n\n## CLI\n\nThis module includes a simple command line interface, which you can install with `npm install sane -g`.\n\n```\nUsage: sane <command> [...directory] [--glob=<filePattern>] [--poll] [--watchman] [--watchman-path=<watchmanBinaryPath>] [--dot] [--wait=<seconds>]\n\nOPTIONS:\n    --glob=<filePattern>\n      A single string glob pattern or an array of them.\n\n    --ignored=<filePattern>\n      A glob, regex, function, or array of any combination.\n\n    --poll, -p\n      Use polling mode.\n\n    --watchman, -w\n      Use watchman (if available).\n\n    --watchman-path=<watchmanBinaryPath>\n      Sets a custom path for watchman binary (if using this mode).\n\n    --dot, -d\n      Enables watching files/directories that start with a dot.\n\n    --wait=<seconds>\n      Duration, in seconds, that watching will be disabled\n      after running <command>. Setting this option will\n      throttle calls to <command> for the specified duration.\n```\n\nIt will watch the given `directory` and run the given <command> every time a file changes.\n\n### CLI example usage\n- `sane 'echo \"A command ran\"'`\n- `sane 'echo \"A command ran\"' --glob='**/*.css'`\n- `sane 'echo \"A command ran\"' site/assets/css --glob='**/*.css'`\n- `sane 'echo \"A command ran\"' --glob='**/*.css' --ignored='**/ignore.css'`\n- `sane 'echo \"A command ran\"' --wait=3`\n- `sane 'echo \"A command ran\"' -p`\n\n## License\n\nMIT\n\n## Credits\nThe CLI was originally based on the [watch CLI](https://github.com/mikeal/watch). Watch is licensed under the Apache License Version 2.0.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/amasad/sane.git"
  },
  "scripts": {
    "format": "prettier --trailing-comma es5 --single-quote --write index.js 'src/**/*.js' 'test/**/*.js'",
    "test": "npm run format && eslint src/ test/ index.js && mocha --bail test/test.js && mocha --bail test/utils-test.js",
    "test:debug": "mocha debug --bail"
  },
  "version": "2.5.2"
}
