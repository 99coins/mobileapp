{
  "_args": [
    [
      {
        "raw": "image-size@^0.6.0",
        "scope": null,
        "escapedName": "image-size",
        "name": "image-size",
        "rawSpec": "^0.6.0",
        "spec": ">=0.6.0 <0.7.0",
        "type": "range"
      },
      "/Users/matanguttman/RN/NNBitcoins/node_modules/metro"
    ]
  ],
  "_from": "image-size@>=0.6.0 <0.7.0",
  "_id": "image-size@0.6.3",
  "_inCache": true,
  "_location": "/image-size",
  "_nodeVersion": "10.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/image-size_0.6.3_1528886094460_0.35941359355853897"
  },
  "_npmUser": {
    "name": "netroy",
    "email": "npm@netroy.in"
  },
  "_npmVersion": "6.0.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "image-size@^0.6.0",
    "scope": null,
    "escapedName": "image-size",
    "name": "image-size",
    "rawSpec": "^0.6.0",
    "spec": ">=0.6.0 <0.7.0",
    "type": "range"
  },
  "_requiredBy": [
    "/metro"
  ],
  "_resolved": "https://registry.npmjs.org/image-size/-/image-size-0.6.3.tgz",
  "_shasum": "e7e5c65bb534bd7cdcedd6cb5166272a85f75fb2",
  "_shrinkwrap": null,
  "_spec": "image-size@^0.6.0",
  "_where": "/Users/matanguttman/RN/NNBitcoins/node_modules/metro",
  "author": {
    "name": "netroy",
    "email": "aditya@netroy.in",
    "url": "http://netroy.in/"
  },
  "bin": {
    "image-size": "bin/image-size.js"
  },
  "bugs": {
    "url": "https://github.com/image-size/image-size/issues"
  },
  "dependencies": {},
  "description": "get dimensions of any image file",
  "devDependencies": {
    "coveralls": "^3.0.1",
    "eslint": "^4.19.1",
    "expect.js": "^0.3.1",
    "glob": "^7.1.1",
    "mocha": "^5.2.0",
    "nyc": "^11.9.0",
    "sinon": "^5.1.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-47xSUiQioGaB96nqtp5/q55m0aBQSQdyIloMOc/x+QVTDZLNmXE892IIDrJ0hM1A5vcNUDD5tDffkSP5lCaIIA==",
    "shasum": "e7e5c65bb534bd7cdcedd6cb5166272a85f75fb2",
    "tarball": "https://registry.npmjs.org/image-size/-/image-size-0.6.3.tgz",
    "fileCount": 20,
    "unpackedSize": 27494,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbIPNPCRA9TVsSAnZWagAAUeUP/jHWnmF+12UM8aO7qTHS\nU6Q3xCN1egUrg7o6JC7xBaQ//0/ELVA1Zq0sRje46T7n3imc0DEtycgqY4Wn\nEkHPNaRb+ns8J4cdjPbElrgBTksSnWoOFUNUdfRclaxBPmFE4OM+eHAzclYG\ntB27Vu/3gLKhHw+WRTOb3aQpvpECXaejyNrIf01dhbxz/hbTenUbq9dv510Y\nBDLYMl3hfhMDX+E1hqlK7UZAuxhqNLMKywoMHsHHns0vbEMYlAguEWs+T76y\nfr8k+wq54k1jBkpG3EdXNXhlft0N5gGhAzxLNxbQAW20jNjlpVvONUGStl1W\nZS6P/7L04/M1nnIw1ldcr3StKRrWd0qPtEkM+nA6bW7eiOyMGv7XvmfPf5hp\nl6qHPYfO/r9AqQnUmQsfRUy3EukcASN5In/LEKOA3Td02Q8Z4dvc5HJy3FSZ\nMTlhzNSDp4pjHPeiqe5u/wwM8Zqa0IkThajOtLqqvga//czV6nnrlw9N8cNz\nG9daHAnTX9o9Dufj0hDsbuP7qLRMQpakRFIIrknf9ATz+hCvqPHX0ikBnKYf\nGDGU8NSPShuMhI93ymZ7Kjo5fvWxdJTWu1c+Kg7uJB1mczHg3al4l0RauMuu\nznyyOGLqOji8KljFyXclq3X+bbHTnEB1H0ypWDsfJIZRFyh4vf4qJbDRmtDV\nq9SJ\r\n=3dvj\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4.0"
  },
  "files": [
    "bin",
    "lib"
  ],
  "gitHead": "2290e6a8ebb58d364c7c96799fbfa211d8ebbd3d",
  "homepage": "https://github.com/image-size/image-size#readme",
  "keywords": [
    "image",
    "size",
    "dimensions",
    "resolution",
    "width",
    "height",
    "png",
    "jpeg",
    "bmp",
    "gif",
    "psd",
    "tiff",
    "webp",
    "svg",
    "icns",
    "ico",
    "cur"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "netroy",
      "email": "aditya@netroy.in"
    },
    {
      "name": "shinnn",
      "email": "snnskwtnb@gmail.com"
    },
    {
      "name": "zeke",
      "email": "zeke@sikelianos.com"
    }
  ],
  "name": "image-size",
  "optionalDependencies": {},
  "readme": "# image-size\n\n[![NPM Version](https://img.shields.io/npm/v/image-size.svg)](https://www.npmjs.com/package/image-size)\n[![Build Status](https://travis-ci.org/image-size/image-size.svg?branch=master)](https://travis-ci.org/image-size/image-size)\n[![NPM Downloads](https://img.shields.io/npm/dm/image-size.svg)](http://npm-stat.com/charts.html?package=image-size&author=&from=&to=)\n[![Coverage Status](https://img.shields.io/coveralls/image-size/image-size/master.svg)](https://coveralls.io/github/image-size/image-size?branch=master)\n[![devDependency Status](https://david-dm.org/image-size/image-size/dev-status.svg)](https://david-dm.org/image-size/image-size#info=devDependencies)\n\nA [Node](https://nodejs.org/en/) module to get dimensions of any image file\n\n## Supported formats\n\n* BMP\n* CUR\n* GIF\n* ICNS\n* ICO\n* JPEG\n* PNG\n* PSD\n* TIFF\n* WebP\n* SVG\n* DDS\n\n### Upcoming\n\n* SWF\n\n## Programmatic Usage\n\n```\nnpm install image-size --save\n```\n\n### Synchronous\n\n```javascript\nvar sizeOf = require('image-size');\nvar dimensions = sizeOf('images/funny-cats.png');\nconsole.log(dimensions.width, dimensions.height);\n```\n\n### Asynchronous\n\n```javascript\nvar sizeOf = require('image-size');\nsizeOf('images/funny-cats.png', function (err, dimensions) {\n  console.log(dimensions.width, dimensions.height);\n});\n```\nNOTE: The asynchronous version doesn't work if the input is a Buffer. Use synchronous version instead.\n\n### Using promises (node 8.x)\n```javascript\nvar { promisify } = require('util');\nvar sizeOf = promisify(require('image-size'));\nsizeOf('images/funny-cats.png')\n  .then(dimensions => { console.log(dimensions.width, dimensions.height); })\n  .catch(err => console.error(err));\n```\n\n### Async/Await (Typescript & ES7)\n```javascript\nvar { promisify } = require('util');\nvar sizeOf = promisify(require('image-size'));\ntry {\n  const dimensions = await sizeOf('images/funny-cats.png');\n  console.log(dimensions.width, dimensions.height);\n} catch (err) {\n  console.error(err);\n}\n```\n\n### Multi-size\n\nIf the target file is an icon (.ico) or a cursor (.cur), the `width` and `height` will be the ones of the first found image.\n\nAn additional `images` array is available and returns the dimensions of all the available images\n\n```javascript\nvar sizeOf = require('image-size');\nvar images = sizeOf('images/multi-size.ico').images;\nfor (const dimensions of images) {\n  console.log(dimensions.width, dimensions.height);\n}\n```\n\n### Using a URL\n\n```javascript\nvar url = require('url');\nvar http = require('http');\n\nvar sizeOf = require('image-size');\n\nvar imgUrl = 'http://my-amazing-website.com/image.jpeg';\nvar options = url.parse(imgUrl);\n\nhttp.get(options, function (response) {\n  var chunks = [];\n  response.on('data', function (chunk) {\n    chunks.push(chunk);\n  }).on('end', function() {\n    var buffer = Buffer.concat(chunks);\n    console.log(sizeOf(buffer));\n  });\n});\n```\n\nYou can optionally check the buffer lengths & stop downloading the image after a few kilobytes.\n**You don't need to download the entire image**\n\n## Command-Line Usage (CLI)\n\n```\nnpm install image-size --global\nimage-size image1 [image2] [image3] ...\n```\n\n## Credits\n\nnot a direct port, but an attempt to have something like\n[dabble's imagesize](https://github.com/dabble/imagesize/blob/master/lib/image_size.rb) as a node module.\n\n## [Contributors](Contributors.md)\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/image-size/image-size.git"
  },
  "scripts": {
    "coverage": "nyc report --reporter=text-lcov | coveralls",
    "pretest": "eslint lib specs",
    "test": "nyc mocha specs"
  },
  "version": "0.6.3"
}
